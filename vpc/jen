@Library('Jenkins-shared-library')_

pipeline{
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('Github')
        GIT_USER_NAME = "nidhi-ashtikar"
        GIT_USER_EMAIL = "ashtikarnidhi19@gmail.com"
        PLAN_FILE = "terraform-plan.out"
        PLAN_OUTPUT_FILE = "terraform-plan.txt"
    }

    parameters{
        string(name: 'AWS_ACCESS_KEY_ID', defaultValue: '', description: 'Enter AWS Access Key ID')
        password(name: 'AWS_SECRET_ACCESS_KEY', defaultValue: '', description: 'Enter AWS Secret Access Key')
        choice(choices: ['us-east-2', 'us-east-1', 'us-west-1'], description: 'Select in which region you want to deploy the resource', name: 'region')
        string(name: 'cidr_block_vpc', defaultValue: '10.0.0.0/16', description: 'cidr_block_vpc')
        string(name: 'cidr_block_public_subnet1', defaultValue: '10.0.0.0/24', description: 'cidr_block_public_subnet1')
        string(name: 'cidr_block_public_subnet2', defaultValue: '10.0.1.0/24', description: 'cidr_block_public_subnet2')

    }

    stages{
        stage('Clone Repository'){
            steps {
                git branch: 'main', url: 'https://github.com/nidhi-ashtikar/infra-tf-creation.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('vpc') {
                    script {
                        Terraform_Init()
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                // withEnv([
                //             "AWS_ACCESS_KEY_ID=${params.AWS_ACCESS_KEY_ID}",
                //             "AWS_SECRET_ACCESS_KEY=${params.AWS_SECRET_ACCESS_KEY}"
                // ])
                dir('vpc') {
                    script {
                        
                        Terraform_Plan()
                    }
                }
            }
        }

        stage('Create New Branch') {
            steps {
                script {
                    CreateNewBranch()
                }
            }
        }

        stage('Store Plan and Commit') {
            steps {
                dir('vpc') {
                    script {
                        Store_Plan_and_Commit()
                    }
                }
            }
        }

        stage('Push Branch to GitHub') {
            steps {
                script {
                    Push_Branch_to_GitHub()
                }
            }
        }

        stage('Post Plan to PR') {
            steps {
                script {
                    Post_Plan_to_PR()
                }
            }
        }
    
    }

    post {
        always {
            cleanWs()
        }
    }
            
}