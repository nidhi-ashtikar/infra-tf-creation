@Library('Jenkins-shared-library')_

pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('Github')
        GIT_USER_NAME = "nidhi-ashtikar"
        GIT_USER_EMAIL = "ashtikarnidhi19@gmail.com"
        PLAN_FILE = "terraform-plan.out"
        PLAN_OUTPUT_FILE = "terraform-plan.txt"
    }

    parameters {
        string(name: 'AWS_ACCESS_KEY_ID', defaultValue: '', description: 'Enter AWS Access Key ID')
        password(name: 'AWS_SECRET_ACCESS_KEY', defaultValue: '', description: 'Enter AWS Secret Access Key')
        string(name: 'resource_name', defaultValue: 'my-instance', description: 'VPC Instance Name')
        string(name: 'vpc_name', defaultValue: 'my-vpc', description: 'VPC Name')
        string(name: 'vpc_cidr_block', defaultValue: '', description: 'vpc_cidr_block')
        string(name: 'additional_tags', defaultValue: '', description: 'additional_tags')
        string(name: 'public-subnet-cidr-1', defaultValue: '', description: 'public-subnet-cidr-1')
        string(name: 'public-subnet-cidr-2', defaultValue: '', description: 'public-subnet-cidr-2')
        string(name: 'private-subnet-cidr-1', defaultValue: '', description: 'private-subnet-cidr-1')
        string(name: 'private-subnet-cidr-2', defaultValue: '', description: 'private-subnet-cidr-2')
        choice(choices: ['us-east-2', 'us-east-1', 'us-west-1'], description: 'Select in which region you want to deploy the resource', name: 'region')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/nidhi-ashtikar/infra-tf-creation.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('vpc') {
                    script {
                        Terraform_Init()
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('vpc') {
                    script {
                        Terraform_Plan_vpc()
                    }
                }
            }
        }

        stage('Create New Branch') {
            steps {
                script {
                    CreateNewBranch()
                }
            }
        }

        stage('Store Plan and Commit') {
            steps {
                dir('vpc') {
                    script {
                        Store_Plan_and_Commit()
                    }
                }
            }
        }

        stage('Push Branch to GitHub') {
            steps {
                script {
                    Push_Branch_to_GitHub()
                }
            }
        }

        stage('Post Plan to PR') {
            steps {
                script {
                    Post_Plan_to_PR()
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
